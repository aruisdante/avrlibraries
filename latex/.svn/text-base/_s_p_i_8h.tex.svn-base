\hypertarget{_s_p_i_8h}{
\section{SPI.h File Reference}
\label{_s_p_i_8h}\index{SPI.h@{SPI.h}}
}


Header file for SPI library.  
\subsection*{Defines}
\begin{DoxyCompactItemize}
\item 
\#define \hyperlink{_s_p_i_8h_ac95559bb49a9609519e96610b543b653}{SSPIN\_\-DAC}~2
\item 
\#define \hyperlink{_s_p_i_8h_af3cbc13a5f107c388634615dcc9c77a1}{SSPIN\_\-ENC}~1
\item 
\#define \hyperlink{_s_p_i_8h_a56ac6b5b18812f549fce8309e1f76ee3}{MSTRSEL}~1
\item 
\#define \hyperlink{_s_p_i_8h_a1d9b84f09371e26ff23ad4d77771c648}{SLV}~0
\item 
\#define \hyperlink{_s_p_i_8h_aea7d320bd067dd396bb74969bf6ccf18}{MSBF}~0
\item 
\#define \hyperlink{_s_p_i_8h_aadb1422e4336b818597c6a34f5619860}{LSBF}~1;
\item 
\#define \hyperlink{_s_p_i_8h_ac8d3c0f56a81b77e662f2f97c28d99e7}{CPLLH}~0
\item 
\#define \hyperlink{_s_p_i_8h_a050172b134d8f7fe6df17a4b2b3cff27}{CPLTH}~1
\item 
\#define \hyperlink{_s_p_i_8h_a38403efbca2363334673c05a4c2c9250}{CPHSL}~0
\item 
\#define \hyperlink{_s_p_i_8h_a3c8a2149718d5c81eb47d331c14789fd}{CPHST}~1
\end{DoxyCompactItemize}
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
char \hyperlink{_s_p_i_8h_adc9b2eec8a09ebb424bb3cfd5cf9f5e1}{SPI\_\-Initialize} (char master, char dataOder, char clockPolarity, char clockPhase)
\begin{DoxyCompactList}\small\item\em Initialize SPI for polling use. \item\end{DoxyCompactList}\item 
char \hyperlink{_s_p_i_8h_aad6249c5ecf671ac8b75b4b17943f762}{SPI\_\-Send\_\-Packet} (char $\ast$packet, int length, char SSPin)
\begin{DoxyCompactList}\small\item\em Send a packet over the SPI bus. \item\end{DoxyCompactList}\item 
char \hyperlink{_s_p_i_8h_a20ddbb3181de38de881b5044fb57ab8e}{SPI\_\-Read\_\-Packet} (char $\ast$packet, int length, char SSPin)
\begin{DoxyCompactList}\small\item\em Send a packet over the SPI bus. \item\end{DoxyCompactList}\item 
char \hyperlink{_s_p_i_8h_a2d073d9e14f183d7fdf5b786285fb5d7}{SPI\_\-Send\_\-Byte} (char cData)
\begin{DoxyCompactList}\small\item\em Send a byte on the SPI bus. \item\end{DoxyCompactList}\item 
char \hyperlink{_s_p_i_8h_af703646df94657939efac54619f543f0}{SPI\_\-Read\_\-Byte} ()
\begin{DoxyCompactList}\small\item\em this function reads a byte of the AVR's hardware SPI port \item\end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
Header file for SPI library. \begin{DoxyDate}{Date}
Jan 27, 2010 
\end{DoxyDate}
\begin{DoxyAuthor}{Author}
: Adam Panzica 
\end{DoxyAuthor}


\subsection{Define Documentation}
\hypertarget{_s_p_i_8h_a38403efbca2363334673c05a4c2c9250}{
\index{SPI.h@{SPI.h}!CPHSL@{CPHSL}}
\index{CPHSL@{CPHSL}!SPI.h@{SPI.h}}
\subsubsection[{CPHSL}]{\setlength{\rightskip}{0pt plus 5cm}\#define CPHSL~0}}
\label{_s_p_i_8h_a38403efbca2363334673c05a4c2c9250}
Constant to set clock phase to sample on the leading edge when initializing SPI mode \hypertarget{_s_p_i_8h_a3c8a2149718d5c81eb47d331c14789fd}{
\index{SPI.h@{SPI.h}!CPHST@{CPHST}}
\index{CPHST@{CPHST}!SPI.h@{SPI.h}}
\subsubsection[{CPHST}]{\setlength{\rightskip}{0pt plus 5cm}\#define CPHST~1}}
\label{_s_p_i_8h_a3c8a2149718d5c81eb47d331c14789fd}
Constant to set clock phase to sample on the trailing edge when initializing SPI mode \hypertarget{_s_p_i_8h_ac8d3c0f56a81b77e662f2f97c28d99e7}{
\index{SPI.h@{SPI.h}!CPLLH@{CPLLH}}
\index{CPLLH@{CPLLH}!SPI.h@{SPI.h}}
\subsubsection[{CPLLH}]{\setlength{\rightskip}{0pt plus 5cm}\#define CPLLH~0}}
\label{_s_p_i_8h_ac8d3c0f56a81b77e662f2f97c28d99e7}
Constant to set clock polarity to leading edge high when initializing SPI mode \hypertarget{_s_p_i_8h_a050172b134d8f7fe6df17a4b2b3cff27}{
\index{SPI.h@{SPI.h}!CPLTH@{CPLTH}}
\index{CPLTH@{CPLTH}!SPI.h@{SPI.h}}
\subsubsection[{CPLTH}]{\setlength{\rightskip}{0pt plus 5cm}\#define CPLTH~1}}
\label{_s_p_i_8h_a050172b134d8f7fe6df17a4b2b3cff27}
Constant to set clock polarity to trailing edge high when initializing SPI mode \hypertarget{_s_p_i_8h_aadb1422e4336b818597c6a34f5619860}{
\index{SPI.h@{SPI.h}!LSBF@{LSBF}}
\index{LSBF@{LSBF}!SPI.h@{SPI.h}}
\subsubsection[{LSBF}]{\setlength{\rightskip}{0pt plus 5cm}\#define LSBF~1;}}
\label{_s_p_i_8h_aadb1422e4336b818597c6a34f5619860}
Constant to select Least Significant Bit First when initializing SPI mode \hypertarget{_s_p_i_8h_aea7d320bd067dd396bb74969bf6ccf18}{
\index{SPI.h@{SPI.h}!MSBF@{MSBF}}
\index{MSBF@{MSBF}!SPI.h@{SPI.h}}
\subsubsection[{MSBF}]{\setlength{\rightskip}{0pt plus 5cm}\#define MSBF~0}}
\label{_s_p_i_8h_aea7d320bd067dd396bb74969bf6ccf18}
Constant to select Most Significant Bit First when initializing SPI mode \hypertarget{_s_p_i_8h_a56ac6b5b18812f549fce8309e1f76ee3}{
\index{SPI.h@{SPI.h}!MSTRSEL@{MSTRSEL}}
\index{MSTRSEL@{MSTRSEL}!SPI.h@{SPI.h}}
\subsubsection[{MSTRSEL}]{\setlength{\rightskip}{0pt plus 5cm}\#define MSTRSEL~1}}
\label{_s_p_i_8h_a56ac6b5b18812f549fce8309e1f76ee3}
Constant to select master mode when initializing SPI mode \hypertarget{_s_p_i_8h_a1d9b84f09371e26ff23ad4d77771c648}{
\index{SPI.h@{SPI.h}!SLV@{SLV}}
\index{SLV@{SLV}!SPI.h@{SPI.h}}
\subsubsection[{SLV}]{\setlength{\rightskip}{0pt plus 5cm}\#define SLV~0}}
\label{_s_p_i_8h_a1d9b84f09371e26ff23ad4d77771c648}
Constant to select slave mode when initializing SPI mode \hypertarget{_s_p_i_8h_ac95559bb49a9609519e96610b543b653}{
\index{SPI.h@{SPI.h}!SSPIN\_\-DAC@{SSPIN\_\-DAC}}
\index{SSPIN\_\-DAC@{SSPIN\_\-DAC}!SPI.h@{SPI.h}}
\subsubsection[{SSPIN\_\-DAC}]{\setlength{\rightskip}{0pt plus 5cm}\#define SSPIN\_\-DAC~2}}
\label{_s_p_i_8h_ac95559bb49a9609519e96610b543b653}
Pin value for SS of the DAC on the SPI bus \hypertarget{_s_p_i_8h_af3cbc13a5f107c388634615dcc9c77a1}{
\index{SPI.h@{SPI.h}!SSPIN\_\-ENC@{SSPIN\_\-ENC}}
\index{SSPIN\_\-ENC@{SSPIN\_\-ENC}!SPI.h@{SPI.h}}
\subsubsection[{SSPIN\_\-ENC}]{\setlength{\rightskip}{0pt plus 5cm}\#define SSPIN\_\-ENC~1}}
\label{_s_p_i_8h_af3cbc13a5f107c388634615dcc9c77a1}
Pin value for SS of the Encoder on the SPI bus 

\subsection{Function Documentation}
\hypertarget{_s_p_i_8h_adc9b2eec8a09ebb424bb3cfd5cf9f5e1}{
\index{SPI.h@{SPI.h}!SPI\_\-Initialize@{SPI\_\-Initialize}}
\index{SPI\_\-Initialize@{SPI\_\-Initialize}!SPI.h@{SPI.h}}
\subsubsection[{SPI\_\-Initialize}]{\setlength{\rightskip}{0pt plus 5cm}char SPI\_\-Initialize (char {\em master}, \/  char {\em dataOder}, \/  char {\em clockPolarity}, \/  char {\em clockPhase})}}
\label{_s_p_i_8h_adc9b2eec8a09ebb424bb3cfd5cf9f5e1}


Initialize SPI for polling use. 
\begin{DoxyParams}{Parameters}
\item[\mbox{$\leftarrow$} {\em master}]selects between master and slave. Use symbolic constants in \hyperlink{_s_p_i_8h}{SPI.h} \item[\mbox{$\leftarrow$} {\em dataOder}]selects between MSB first and LSB first. Use symbolic constants in \hyperlink{_s_p_i_8h}{SPI.h} \item[\mbox{$\leftarrow$} {\em clockPolarity}]selects the clock polarity mode. Use symbolic constants in \hyperlink{_s_p_i_8h}{SPI.h} \item[\mbox{$\leftarrow$} {\em clockPhase}]selects the clock phase mode. Use symbolic constants in \hyperlink{_s_p_i_8h}{SPI.h}\end{DoxyParams}
This function initializes the hardware SPI controller \hypertarget{_s_p_i_8h_af703646df94657939efac54619f543f0}{
\index{SPI.h@{SPI.h}!SPI\_\-Read\_\-Byte@{SPI\_\-Read\_\-Byte}}
\index{SPI\_\-Read\_\-Byte@{SPI\_\-Read\_\-Byte}!SPI.h@{SPI.h}}
\subsubsection[{SPI\_\-Read\_\-Byte}]{\setlength{\rightskip}{0pt plus 5cm}char SPI\_\-Read\_\-Byte ()}}
\label{_s_p_i_8h_af703646df94657939efac54619f543f0}


this function reads a byte of the AVR's hardware SPI port \begin{DoxyReturn}{Returns}
8bit value from the SPI port 
\end{DoxyReturn}
\begin{DoxyNote}{Note}
Due to the way the hardware SPI port works on the AVR, this function clocks out zeros on the MOSI port as it is clocking in on MISO. Ensure that this does not cause problems 
\end{DoxyNote}
\hypertarget{_s_p_i_8h_a20ddbb3181de38de881b5044fb57ab8e}{
\index{SPI.h@{SPI.h}!SPI\_\-Read\_\-Packet@{SPI\_\-Read\_\-Packet}}
\index{SPI\_\-Read\_\-Packet@{SPI\_\-Read\_\-Packet}!SPI.h@{SPI.h}}
\subsubsection[{SPI\_\-Read\_\-Packet}]{\setlength{\rightskip}{0pt plus 5cm}char SPI\_\-Read\_\-Packet (char $\ast$ {\em packet}, \/  int {\em length}, \/  char {\em SSPin})}}
\label{_s_p_i_8h_a20ddbb3181de38de881b5044fb57ab8e}


Send a packet over the SPI bus. 
\begin{DoxyParams}{Parameters}
\item[\mbox{$\leftarrow$} {\em $\ast$packet}]pointer to an array of bytes to store the packet to be red over the SPI bus \item[\mbox{$\leftarrow$} {\em length}]length of the packet, in bytes \item[\mbox{$\leftarrow$} {\em SSPin}]Pin on port B to use as slave select\end{DoxyParams}
This function reads a packet of data over the SPI bus \hypertarget{_s_p_i_8h_a2d073d9e14f183d7fdf5b786285fb5d7}{
\index{SPI.h@{SPI.h}!SPI\_\-Send\_\-Byte@{SPI\_\-Send\_\-Byte}}
\index{SPI\_\-Send\_\-Byte@{SPI\_\-Send\_\-Byte}!SPI.h@{SPI.h}}
\subsubsection[{SPI\_\-Send\_\-Byte}]{\setlength{\rightskip}{0pt plus 5cm}char SPI\_\-Send\_\-Byte (char {\em cData})}}
\label{_s_p_i_8h_a2d073d9e14f183d7fdf5b786285fb5d7}


Send a byte on the SPI bus. 
\begin{DoxyParams}{Parameters}
\item[\mbox{$\leftarrow$} {\em cData}]byte of data to be sent on the SPI bus\end{DoxyParams}
This function initializes the hardware SPI controller \hypertarget{_s_p_i_8h_aad6249c5ecf671ac8b75b4b17943f762}{
\index{SPI.h@{SPI.h}!SPI\_\-Send\_\-Packet@{SPI\_\-Send\_\-Packet}}
\index{SPI\_\-Send\_\-Packet@{SPI\_\-Send\_\-Packet}!SPI.h@{SPI.h}}
\subsubsection[{SPI\_\-Send\_\-Packet}]{\setlength{\rightskip}{0pt plus 5cm}char SPI\_\-Send\_\-Packet (char $\ast$ {\em packet}, \/  int {\em length}, \/  char {\em SSPin})}}
\label{_s_p_i_8h_aad6249c5ecf671ac8b75b4b17943f762}


Send a packet over the SPI bus. 
\begin{DoxyParams}{Parameters}
\item[\mbox{$\leftarrow$} {\em $\ast$packet}]pointer to an array of bytes containing the packet to be sent over the SPI bus \item[\mbox{$\leftarrow$} {\em length}]length of the packet, in bytes \item[\mbox{$\leftarrow$} {\em SSPin}]Pin on port B to use as slave select\end{DoxyParams}
This function sends a packet of data over the SPI bus 